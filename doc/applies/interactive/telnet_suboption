
     tttteeeellllnnnneeeetttt____ssssuuuubbbbooooppppttttiiiioooonnnn((((4444))))    MMMMuuuuddddOOOOSSSS ((((5555 SSSSeeeepppp 1111999999994444))))     tttteeeellllnnnneeeetttt____ssssuuuubbbbooooppppttttiiiioooonnnn((((4444))))

     NNNNAAAAMMMMEEEE
          telnet_suboption - process telnet suboptions

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          void telnet_suboption( string buffer );

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          This apply is called on the interactive object with the
          parameter given by the SE telnet suboption, for mudlib
          defined processing.  For example, this allows for future
          support of terminal types.

          The first byte of the buffer is typically a type descriptor,
          ie TELOPT_TTYPE. The next byte is a procession option, such
          as TELQUAL_IS.  Following this is the type dependent data.
          In the case of a terminal type call, the data will be routed
          through through the terminal_type() apply instead.

          Possible suboptions:

               #define TELQUAL_IS    0 // option is...
               #define TELQUAL_SEND  1 // send options
               #define TELQUAL_INFO  2 // ENVIRON: informational version of IS
               #define TELQUAL_REPLY 3 // AUTHENTICATION: client version of IS
               #define TELQUAL_NAME  4 // AUTHENTICATION: client version of IS

     Page 1                                          (printed 3/16/95)

