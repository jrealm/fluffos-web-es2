
     ssssssssccccaaaannnnffff((((3333))))              MMMMuuuuddddOOOOSSSS ((((5555 SSSSeeeepppp 1111999999994444))))               ssssssssccccaaaannnnffff((((3333))))

     NNNNAAAAMMMMEEEE
          sscanf() - match substrings in a string.

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          int sscanf( string str, string fmt,
                      mixed var1, mixed var2 ... );

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          Parse a string `str' using the format `fmt'. `fmt' can
          contain strings separated by "%d" and "%s". Every "%d" and
          "%s" corresponds to one of `var1', `var2'...  "%d" will give
          a number, and "%s" will give a string.  The * may be used in
          a format specifier (e.g. %*d and %*s) to allow integers or
          strings (respectively) to be skipped over in the input
          string (without being assigned to a variable).  The LPC
          sscanf() is similar to its C counterpart however it does
          behave somewhat differently.  It is not necessary (or
          possible) to pass the address of variables into sscanf
          (simply pass the name of the variable).  Another difference
          is that in the LPC sscanf(), sscanf(str, "%s %s", str1,
          str2) will parse the first word in str into str1 and the
          remainder of str into str2.

          The number of matched "%d" and "%s" is returned.

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          explode(3), replace_string(3), strsrch(3)

     Page 1                                          (printed 3/16/95)

