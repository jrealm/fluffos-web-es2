
     rrrreeeegggg____aaaassssssssoooocccc((((3333))))           MMMMuuuuddddOOOOSSSS ((((22226666 DDDDeeeecccc 1111999999994444))))           rrrreeeegggg____aaaassssssssoooocccc((((3333))))

     NNNNAAAAMMMMEEEE
          reg_assoc() - A regular pattern substring extractor

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          mixed *reg_assoc(string str, string *pat_arr, mixed
          *tok_arr, void | mixed def);

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          reg_assoc takes a string and explodes it into substrings
          matching the regular expression pattern-strings given in
          pat_arr and associates them with tokens given in tok_arr. If
          def (default 0) is given, it is associated with a non-match.
          The return value is an array of two arrays, the 1st being an
          array of the form

               ({ non-match1, match1, non-match2, match2, ...,
                  non-match n, match n, non-match n+1 })

          and the 2nd holds the tokens corresponding to the matches in
          order:

               ({ def, token corresponding to match1, ...., def,
          token corresponding to match n, def }).

          pat_arr and tok_arr must be of the same sizes, the ith
          element in tok_arr being the corresponding token to the ith
          element of pat_arr. pat_arr can only hold strings.

          If pat_arr (and hence tok_arr) has size 0 then the return
          value is simply ({ ({ str }), ({ def }) }).

     EEEEXXXXAAAAMMMMPPPPLLLLEEEE
          #define STRING_PAT "\"(\\\\.|[^\\\"])*\""
          #define NUM_PAT "[0-9]+"

          #define F_STRING 1
          #define F_NUM 2

          reg_assoc("Blah \"blah\" test 203 hhh j 308 \"bacdcd\b\"acb",
            ({ STRING_PAT, NUM_PAT }), ({ F_STRING, F_NUM }), "no-match")

          will return
          ({ ({ "Blah ", "\"blah\"", " test ", "203", " hhh j ", "308", " ",
                "\"bacdcd\b\"", "acb" }),
             ({ "no-match", F_STRING, "no-match", F_NUM, "no-match", F_NUM,
                "no-match", F_STRING, "no-match" }) })

     Page 1                                          (printed 3/16/95)

