
     sssseeeetttt____aaaauuuutttthhhhoooorrrr((((3333))))          MMMMuuuuddddOOOOSSSS ((((5555 SSSSeeeepppp 1111999999994444))))           sssseeeetttt____aaaauuuutttthhhhoooorrrr((((3333))))

     NNNNAAAAMMMMEEEE
          set_author - set the author associated with an object.

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          void set_author( string author );

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          Every object has both an author and a domain associated with
          it for the purposes of tracking statistics for authors and
          domains.  Domains may only be set in the master object
          function domain_file(4), however authors are different.
          They can be initialized to some default value by
          author_file(4) in the master object, but can also be changed
          using the set_author efun.

          set_author changes the author of the object that it is
          called within.  That author will get credit for all future
          actions of that object that affect mudlib statistics.  Note
          that this may cause some weird numbers to occur in the
          categories "objects" and "array_size", since the object may
          have initialized arrays or been created under the original
          author's credit, but it could be destructed or free the
          arrays that it's using under another author, thus reducing
          numbers from a count that didn't have those same numbers
          added previously.  To rememdy this, only use set_author
          within create(4), and use it before any arrays are allocated
          if at all possible.

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          author_file(4), domain_file(4), author_stats(3),
          set_author(3), domain_stats(3)

     Page 1                                          (printed 3/16/95)

