
     ggggeeeetttt____cccchhhhaaaarrrr((((3333))))            MMMMuuuuddddOOOOSSSS ((((5555 SSSSeeeepppp 1111999999994444))))             ggggeeeetttt____cccchhhhaaaarrrr((((3333))))

     NNNNAAAAMMMMEEEE
          get_char - causes next character of input to be sent to a
          specified function

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          varargs void get_char( string | function fun, int flag, ...
          );

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          Enable next character of user input to be sent to the
          function `fun' as an argument. The input character will not
          be parsed by the driver.

          Note that get_char is non-blocking which means that the
          object calling get_char does not pause waiting for input.
          Instead the object continues to execute any statements
          following the get_char.  The specified function `fun' will
          not be called until the user input has been collected.

          If "get_char()" is called more than once in the same
          execution, only the first call has any effect.

          If optional argument `flag' is non-zero, the char given by
          the player will not be echoed, and is not seen if snooped
          (this is useful for collecting passwords).

          The function `fun' will be called with the user input as its
          first argument (a string). Any additional arguments supplied
          to get_char will be passed on to `fun' as arguments
          following the user input.

     BBBBUUUUGGGGSSSS
          Please note that get_char has a significant bug in MudOS 0.9
          and earlier.  On many systems with poor telnet negotiation
          (read: almost every major workstation on the market),
          get_char makes screen output behave strangely.  It is not
          recommended for common usage throughout the mudlib until
          that bug is fixed.  (It is currently only known to work well
          for users connecting from NeXT computers.)

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          call_other(3), call_out(3), input_to(3)

     Page 1                                          (printed 3/16/95)

